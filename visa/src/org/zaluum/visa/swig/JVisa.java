/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.zaluum.visa.swig;

public class JVisa implements JVisaConstants {
  public static int viOpenDefaultRM(long[] OUTPUT) {
    return JVisaJNI.viOpenDefaultRM(OUTPUT);
  }

  public static int viFindRsrc(long sesn, String expr, SWIGTYPE_p_unsigned_long vi, SWIGTYPE_p_unsigned_long retCnt, String desc) {
    return JVisaJNI.viFindRsrc(sesn, expr, SWIGTYPE_p_unsigned_long.getCPtr(vi), SWIGTYPE_p_unsigned_long.getCPtr(retCnt), desc);
  }

  public static int viFindNext(long vi, String desc) {
    return JVisaJNI.viFindNext(vi, desc);
  }

  public static int viParseRsrc(long rmSesn, String rsrcName, SWIGTYPE_p_unsigned_short intfType, SWIGTYPE_p_unsigned_short intfNum) {
    return JVisaJNI.viParseRsrc(rmSesn, rsrcName, SWIGTYPE_p_unsigned_short.getCPtr(intfType), SWIGTYPE_p_unsigned_short.getCPtr(intfNum));
  }

  public static int viParseRsrcEx(long rmSesn, String rsrcName, SWIGTYPE_p_unsigned_short intfType, SWIGTYPE_p_unsigned_short intfNum, String rsrcClass, String expandedUnaliasedName, String aliasIfExists) {
    return JVisaJNI.viParseRsrcEx(rmSesn, rsrcName, SWIGTYPE_p_unsigned_short.getCPtr(intfType), SWIGTYPE_p_unsigned_short.getCPtr(intfNum), rsrcClass, expandedUnaliasedName, aliasIfExists);
  }

  public static int viOpen(long sesn, String name, long mode, long timeout, long[] OUTPUT) {
    return JVisaJNI.viOpen(sesn, name, mode, timeout, OUTPUT);
  }

  public static int viClose(long INPUT) {
    return JVisaJNI.viClose(INPUT);
  }

  public static int viSetAttribute(long vi, long attrName, long attrValue) {
    return JVisaJNI.viSetAttribute(vi, attrName, attrValue);
  }

  public static int viGetAttribute(long vi, long attrName, SWIGTYPE_p_void attrValue) {
    return JVisaJNI.viGetAttribute(vi, attrName, SWIGTYPE_p_void.getCPtr(attrValue));
  }

  public static int viStatusDesc(long vi, int status, String desc) {
    return JVisaJNI.viStatusDesc(vi, status, desc);
  }

  public static int viTerminate(long vi, int degree, long jobId) {
    return JVisaJNI.viTerminate(vi, degree, jobId);
  }

  public static int viLock(long vi, long lockType, long timeout, String requestedKey, String accessKey) {
    return JVisaJNI.viLock(vi, lockType, timeout, requestedKey, accessKey);
  }

  public static int viUnlock(long vi) {
    return JVisaJNI.viUnlock(vi);
  }

  public static int viEnableEvent(long vi, long eventType, int mechanism, long context) {
    return JVisaJNI.viEnableEvent(vi, eventType, mechanism, context);
  }

  public static int viDisableEvent(long vi, long eventType, int mechanism) {
    return JVisaJNI.viDisableEvent(vi, eventType, mechanism);
  }

  public static int viDiscardEvents(long vi, long eventType, int mechanism) {
    return JVisaJNI.viDiscardEvents(vi, eventType, mechanism);
  }

  public static int viWaitOnEvent(long vi, long inEventType, long timeout, SWIGTYPE_p_unsigned_long outEventType, SWIGTYPE_p_unsigned_long outContext) {
    return JVisaJNI.viWaitOnEvent(vi, inEventType, timeout, SWIGTYPE_p_unsigned_long.getCPtr(outEventType), SWIGTYPE_p_unsigned_long.getCPtr(outContext));
  }

  public static int viInstallHandler(long vi, long eventType, SWIGTYPE_p_f_unsigned_long_unsigned_long_unsigned_long_p_void__long handler, SWIGTYPE_p_void userHandle) {
    return JVisaJNI.viInstallHandler(vi, eventType, SWIGTYPE_p_f_unsigned_long_unsigned_long_unsigned_long_p_void__long.getCPtr(handler), SWIGTYPE_p_void.getCPtr(userHandle));
  }

  public static int viUninstallHandler(long vi, long eventType, SWIGTYPE_p_f_unsigned_long_unsigned_long_unsigned_long_p_void__long handler, SWIGTYPE_p_void userHandle) {
    return JVisaJNI.viUninstallHandler(vi, eventType, SWIGTYPE_p_f_unsigned_long_unsigned_long_unsigned_long_p_void__long.getCPtr(handler), SWIGTYPE_p_void.getCPtr(userHandle));
  }

  public static int viRead(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viRead(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viReadAsync(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long jobId) {
    return JVisaJNI.viReadAsync(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(jobId));
  }

  public static int viReadToFile(long vi, String filename, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viReadToFile(vi, filename, cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viWrite(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viWrite(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viWriteAsync(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long jobId) {
    return JVisaJNI.viWriteAsync(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(jobId));
  }

  public static int viWriteFromFile(long vi, String filename, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viWriteFromFile(vi, filename, cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viAssertTrigger(long vi, int protocol) {
    return JVisaJNI.viAssertTrigger(vi, protocol);
  }

  public static int viReadSTB(long vi, SWIGTYPE_p_unsigned_short status) {
    return JVisaJNI.viReadSTB(vi, SWIGTYPE_p_unsigned_short.getCPtr(status));
  }

  public static int viClear(long vi) {
    return JVisaJNI.viClear(vi);
  }

  public static int viSetBuf(long vi, int mask, long size) {
    return JVisaJNI.viSetBuf(vi, mask, size);
  }

  public static int viFlush(long vi, int mask) {
    return JVisaJNI.viFlush(vi, mask);
  }

  public static int viBufWrite(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viBufWrite(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viBufRead(long vi, SWIGTYPE_p_unsigned_char buf, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viBufRead(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viPrintf(long vi, String writeFmt) {
    return JVisaJNI.viPrintf(vi, writeFmt);
  }

  public static int viSPrintf(long vi, SWIGTYPE_p_unsigned_char buf, String writeFmt) {
    return JVisaJNI.viSPrintf(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), writeFmt);
  }

  public static int viScanf(long vi, String readFmt) {
    return JVisaJNI.viScanf(vi, readFmt);
  }

  public static int viSScanf(long vi, SWIGTYPE_p_unsigned_char buf, String readFmt) {
    return JVisaJNI.viSScanf(vi, SWIGTYPE_p_unsigned_char.getCPtr(buf), readFmt);
  }

  public static int viQueryf(long vi, String writeFmt, String readFmt) {
    return JVisaJNI.viQueryf(vi, writeFmt, readFmt);
  }

  public static int viIn8(long vi, int space, long offset, SWIGTYPE_p_unsigned_char val8) {
    return JVisaJNI.viIn8(vi, space, offset, SWIGTYPE_p_unsigned_char.getCPtr(val8));
  }

  public static int viOut8(long vi, int space, long offset, short val8) {
    return JVisaJNI.viOut8(vi, space, offset, val8);
  }

  public static int viIn16(long vi, int space, long offset, SWIGTYPE_p_unsigned_short val16) {
    return JVisaJNI.viIn16(vi, space, offset, SWIGTYPE_p_unsigned_short.getCPtr(val16));
  }

  public static int viOut16(long vi, int space, long offset, int val16) {
    return JVisaJNI.viOut16(vi, space, offset, val16);
  }

  public static int viIn32(long vi, int space, long offset, SWIGTYPE_p_unsigned_long val32) {
    return JVisaJNI.viIn32(vi, space, offset, SWIGTYPE_p_unsigned_long.getCPtr(val32));
  }

  public static int viOut32(long vi, int space, long offset, long val32) {
    return JVisaJNI.viOut32(vi, space, offset, val32);
  }

  public static int viMoveIn8(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_char buf8) {
    return JVisaJNI.viMoveIn8(vi, space, offset, length, SWIGTYPE_p_unsigned_char.getCPtr(buf8));
  }

  public static int viMoveOut8(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_char buf8) {
    return JVisaJNI.viMoveOut8(vi, space, offset, length, SWIGTYPE_p_unsigned_char.getCPtr(buf8));
  }

  public static int viMoveIn16(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_short buf16) {
    return JVisaJNI.viMoveIn16(vi, space, offset, length, SWIGTYPE_p_unsigned_short.getCPtr(buf16));
  }

  public static int viMoveOut16(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_short buf16) {
    return JVisaJNI.viMoveOut16(vi, space, offset, length, SWIGTYPE_p_unsigned_short.getCPtr(buf16));
  }

  public static int viMoveIn32(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_long buf32) {
    return JVisaJNI.viMoveIn32(vi, space, offset, length, SWIGTYPE_p_unsigned_long.getCPtr(buf32));
  }

  public static int viMoveOut32(long vi, int space, long offset, long length, SWIGTYPE_p_unsigned_long buf32) {
    return JVisaJNI.viMoveOut32(vi, space, offset, length, SWIGTYPE_p_unsigned_long.getCPtr(buf32));
  }

  public static int viMove(long vi, int srcSpace, long srcOffset, int srcWidth, int destSpace, long destOffset, int destWidth, long srcLength) {
    return JVisaJNI.viMove(vi, srcSpace, srcOffset, srcWidth, destSpace, destOffset, destWidth, srcLength);
  }

  public static int viMoveAsync(long vi, int srcSpace, long srcOffset, int srcWidth, int destSpace, long destOffset, int destWidth, long srcLength, SWIGTYPE_p_unsigned_long jobId) {
    return JVisaJNI.viMoveAsync(vi, srcSpace, srcOffset, srcWidth, destSpace, destOffset, destWidth, srcLength, SWIGTYPE_p_unsigned_long.getCPtr(jobId));
  }

  public static int viMapAddress(long vi, int mapSpace, long mapOffset, long mapSize, int access, SWIGTYPE_p_void suggested, SWIGTYPE_p_p_void address) {
    return JVisaJNI.viMapAddress(vi, mapSpace, mapOffset, mapSize, access, SWIGTYPE_p_void.getCPtr(suggested), SWIGTYPE_p_p_void.getCPtr(address));
  }

  public static int viUnmapAddress(long vi) {
    return JVisaJNI.viUnmapAddress(vi);
  }

  public static void viPeek8(long vi, SWIGTYPE_p_void address, SWIGTYPE_p_unsigned_char val8) {
    JVisaJNI.viPeek8(vi, SWIGTYPE_p_void.getCPtr(address), SWIGTYPE_p_unsigned_char.getCPtr(val8));
  }

  public static void viPoke8(long vi, SWIGTYPE_p_void address, short val8) {
    JVisaJNI.viPoke8(vi, SWIGTYPE_p_void.getCPtr(address), val8);
  }

  public static void viPeek16(long vi, SWIGTYPE_p_void address, SWIGTYPE_p_unsigned_short val16) {
    JVisaJNI.viPeek16(vi, SWIGTYPE_p_void.getCPtr(address), SWIGTYPE_p_unsigned_short.getCPtr(val16));
  }

  public static void viPoke16(long vi, SWIGTYPE_p_void address, int val16) {
    JVisaJNI.viPoke16(vi, SWIGTYPE_p_void.getCPtr(address), val16);
  }

  public static void viPeek32(long vi, SWIGTYPE_p_void address, SWIGTYPE_p_unsigned_long val32) {
    JVisaJNI.viPeek32(vi, SWIGTYPE_p_void.getCPtr(address), SWIGTYPE_p_unsigned_long.getCPtr(val32));
  }

  public static void viPoke32(long vi, SWIGTYPE_p_void address, long val32) {
    JVisaJNI.viPoke32(vi, SWIGTYPE_p_void.getCPtr(address), val32);
  }

  public static int viMemAlloc(long vi, long size, SWIGTYPE_p_unsigned_long offset) {
    return JVisaJNI.viMemAlloc(vi, size, SWIGTYPE_p_unsigned_long.getCPtr(offset));
  }

  public static int viMemFree(long vi, long offset) {
    return JVisaJNI.viMemFree(vi, offset);
  }

  public static int viGpibControlREN(long vi, int mode) {
    return JVisaJNI.viGpibControlREN(vi, mode);
  }

  public static int viGpibControlATN(long vi, int mode) {
    return JVisaJNI.viGpibControlATN(vi, mode);
  }

  public static int viGpibSendIFC(long vi) {
    return JVisaJNI.viGpibSendIFC(vi);
  }

  public static int viGpibCommand(long vi, SWIGTYPE_p_unsigned_char cmd, long cnt, SWIGTYPE_p_unsigned_long retCnt) {
    return JVisaJNI.viGpibCommand(vi, SWIGTYPE_p_unsigned_char.getCPtr(cmd), cnt, SWIGTYPE_p_unsigned_long.getCPtr(retCnt));
  }

  public static int viGpibPassControl(long vi, int primAddr, int secAddr) {
    return JVisaJNI.viGpibPassControl(vi, primAddr, secAddr);
  }

  public static int viVxiCommandQuery(long vi, int mode, long cmd, SWIGTYPE_p_unsigned_long response) {
    return JVisaJNI.viVxiCommandQuery(vi, mode, cmd, SWIGTYPE_p_unsigned_long.getCPtr(response));
  }

  public static int viAssertUtilSignal(long vi, int line) {
    return JVisaJNI.viAssertUtilSignal(vi, line);
  }

  public static int viAssertIntrSignal(long vi, short mode, long statusID) {
    return JVisaJNI.viAssertIntrSignal(vi, mode, statusID);
  }

  public static int viMapTrigger(long vi, short trigSrc, short trigDest, int mode) {
    return JVisaJNI.viMapTrigger(vi, trigSrc, trigDest, mode);
  }

  public static int viUnmapTrigger(long vi, short trigSrc, short trigDest) {
    return JVisaJNI.viUnmapTrigger(vi, trigSrc, trigDest);
  }

  public static int viUsbControlOut(long vi, short bmRequestType, short bRequest, int wValue, int wIndex, int wLength, SWIGTYPE_p_unsigned_char buf) {
    return JVisaJNI.viUsbControlOut(vi, bmRequestType, bRequest, wValue, wIndex, wLength, SWIGTYPE_p_unsigned_char.getCPtr(buf));
  }

  public static int viUsbControlIn(long vi, short bmRequestType, short bRequest, int wValue, int wIndex, int wLength, SWIGTYPE_p_unsigned_char buf, SWIGTYPE_p_unsigned_short retCnt) {
    return JVisaJNI.viUsbControlIn(vi, bmRequestType, bRequest, wValue, wIndex, wLength, SWIGTYPE_p_unsigned_char.getCPtr(buf), SWIGTYPE_p_unsigned_short.getCPtr(retCnt));
  }

  public static int viVxiServantResponse(long vi, short mode, long resp) {
    return JVisaJNI.viVxiServantResponse(vi, mode, resp);
  }

}
