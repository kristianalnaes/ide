Agenda

week 5-11 doc week
	- llibreria plot collonuda
	- instanciació Swing amb parametres constructors
	- zaluum file with version number
	- propietats: canviar nom box, 
	- bug doble update propietats 
	- nova paleta .xml
	- configurador Plot (pensar Plot, chart,etc)
	- al enganxar posar-ho en el contenidor on cau ( enganxar a la GUI a quin block va a parar?)
	- clean up wire
	- visuals al block diagram (notes sobretot)
	- crear port connectant cable
    - same label in both views. (caption?)
	- view as icon 
	- z order: endavant-endarrera gui
	- acabar swing intenum values
	- editar propietats amb boto dret?
	- replicar exemple complex lv
	- lv local variable = field access. (accés this fet, fer un box directament a field i seleccionar mètode a invocar)	
	- lv global variable = static field
	- Select toolkit, GTK+,etc
	- Clusters, com imitar? Hashmap? Classe interna?
	- make sure refactorings and quickfixes are not picked from java jdt. (eg. Declared package)
	- write feature list on freemind
	- Graphing widget properties. Color/etc( see labview)
	- drivers
		- template
		- serial
		- tcp/ip 
	- basic math
	- sound output clicks?
	- tutorials/docs/etc
	- examples/screencast
	- build scripts
week 12-18 bug hunting
	- test cases bug fixing
		- cast
		- box unbox
		- generics
		- protected/private
	- compilation with errors in java ProblemBinding, etc
week 19-25 launch week
	- beta nag screen/ watermark
	- buy hosting
	- buy template
	- publish beta
	- buy adwords	
Idees
	- pintar ombra als elements d'un altre pare 
	- Scala.react programació reactiva
	- tolerancia del lloc de connexió 
	- Com tractar arrays?
		- Per exemple per implementar la suma de dues arrays:
			- si s'implementa amb mètodes, un mètode per cada combinació de tipus short-int int-double, etc
			- per defecte si l'operació es sobre 2 arrays, implementarla dins un for resultant la array més petita
				- Quines operacions? binaries? unaries? aplicar mètode?
				- map,flatmap?
			- crear sempre mètodes nous
			- ignorar arrays i anar a collections? ... mal rendiment?
			- box for
		- grow array? 
	 	- new array cada vegada, conservar l'última, in-place? benchmark?
	- fer fàcil la creació de boxes noves.  
		- expr oberta tipus while. No es pot afegir a dins però hi ha  un boto.
		- s'afegeixen ports, es connecten i es trien els tipus (o no)
			- auto detect port types
		- quan es clica el botó menu per crear una nova classe basada en la plantilla
	 - Multi apply. Classes Box amb més d'un apply. 
	  	 Static box: mètodes estàtics com a boxes 
	 	- Com es representen a la paleta? cada mètode una box?
	 	- Canviar significat de boxtypesymbol, ja no es JavaClassType
	 	-
	 - Label amb javabeans, boxes només visuals (decoració)
	 - Treure llista de boxes i mètodes a mostrar a la paleta d'xmls
	 	- per aprofitar javax.swing p.ex.
	 	- box lliure, triar classe i mètode a invocar i camps de retorn
	 		- paleta nomes com a plantilla de les boxes més habituals, fetes servir recentment. 
	    - com trobar xmls? mirar META-INF etc del classpath
	 
	  
	 	
article ideas
	- Use cases.
	- Strategy. How to start. Open source library / pay tools.
	- Why Zaluum: Write/Draw what makes sense. Future directions. Why JVM.
	- Robot
	- Scala

bugs
	- al connectar o desconnectar cables de vegades fa coses rares
	- BUG null at org.zaluum.nide.zge.RichFigure.translateFromViewport(baseFigures.scala:63)
 	- test new array dimensions
	-s'ha d'engegar RCP en unity amb UBUNTU_MENUPROXY=0
	-sembla que xulrunner dona algun problema d'alt consum de cpu. xulrunner 2 no?
	- BUG Change type of a box to While or if (doesn't have template)
	
LATER
	- colocar widget a les mateixes coordenades que al diagrama de blocks al crear(buscar forat?)
	- Botons advanced, categories, etc a Zaluum properties view
	-Com enrutar events swing a boxes?
	-Millorar generació de codi amb reflection?
	-literal parsing -> expression parsing (field access, method invoke)
	-miglayout support
	- nested guis as new window
	- thread inner classes in jmodel
	- analyze multi thread with costs
	- notes/ visual only on diagram
	- visual only boxes
	- improve popup usability. Multiple changes at once.
	- filter @Box on type selection right button
	- infer types of while/ifs
	- type auto (white color on add, remove, etc)
	- ensure method/field order in generated code
	* Dependecy tracking for incremental compilation when a box changes port names but not the method signature
	- optimize locals usage in code generation 
	- how to get all methods with visibleFrom ZaluumCompilationUnitScope?
	- Timed loop?
	- getter/setter boxes with all fields at once instead of selecting one
	-suport per a multiples directors (multi-threading)
	-backend soot? backend JDT? suport per multi backend? (generacio codi c/hadoop?)
	-Feedback connections
	-write javadoc on zaluum files
	-com gestionar excepcions?
	-Extensible in/out with unfolded array inputs
	-GUI deep preview -> metode per inicialitzar gui sense la box?
	-declare constructor on zaluum, use as parameter in instances
	-re layout on box movement
	-show/hide grid
	-snap correctly
	-java search full support/refactor support
	-refactor some boxes into a new subsystem
	-mirar la visibilitat del port (protected/public) al compilar. Visualitzar el port depenent de si es accessible o no.
	-Better port colors. @Color?
	-External port position selection
	-revisar format protobuf (simplificar, fer servir text pla?)	
	-align tool
	-double click or ctrl click goes to definition
	*herencia de .zaluums? 
	-refactor
		- org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester
		- org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils.getJavaElements .getResources
		- org.eclipse.jdt.internal.core.util.Util. isJavaLikeFileName
		- org.eclipse.jdt.internal.core.CopyResourceElementsOperation
		- org.eclipse.jdt.internal.core.CreatePackageDeclaration
		- ICompilationUnit create...
	-fondo workbench com talend amb fletxes que indiquen com començar
	-better icon set
	-Zoom
	-groovy compatible/scala compatible
	-Mark errors on presentation compiler? ex. no constructor found.
	-fer possible que es pugui passar al constructor una o més boxes per emplenar el diagrama. S'ha de tenir eina per posar una interficie sense new al diagrama.
	-diferent directors
	-editor icones
	-multi-threading
	-Search in palette

MUCH LATER
	-code generation
	-map reduce/other outputs.
	
DONE!
	- configurador blocs complexos. Plot per exemple.
	- eliminar boxtypesymbol. Qualsevol JavaType com a box
	- emetre labels amb linies de codi per excepcions
	- al crear modificar directament la label. Crear nom del camp a partir de label.
	- al copiar, moure les coordenades lleugerament (tant gui com pos)
	- colocar widget a les mateixes coordenades que al diagrama de blocks al crear(buscar forat?)
	- grid més gran a GUI, desactivar-la al block diagram
	- decoracions: gui only box 
	- Special property loader (color, list contents...) -> menu -> code gen
	- buidar metodes boxtypesymbol, fer servir binding
	- Enlloc de _widget heredar directament de Jpanel
	- Javabean properties
	- each box have an unique name
	- quan es vol moure un fil, costa de que no s'activi el de fer extensions. Temporitzador de mouse quiet o dins una zona?
	- Swing thread synchronization / refresh rate	
	- fix show label on gui
	- multi thread code generation
	- fix find methods and constructors in scope by visibility
	- better port names (this,thisOut)
	- remove expr .javas and organize better packages for exprs IF javadoc support ok
	- implement cast to object
	- when a visual component moves, resize the canvas size
	- respawn test framework
	- improve error messages
	- mark errors on boxes/connections/ports
	- unified interface to select port type, array type/dim, class/method/field
	- change port names
	- check return port name collision with java keywords object methods
	- Automatic icon grows/shrinks depending on number of ports
	- connection in->out
	- helperNames for java 
	- fix widget
	- @Apply marks method to invoke
	* compilador amb parametres out apply(in in in)
	- consider array style for get/put
	- array creation
	- array access
	- New
	- Static method and field access
	- field access
	- restore clipboard
	- gui support to change block vi
	- If box and Switch support.
	- GUI per seleccionar el tipus dels port
	- ensure method binding is resolved and hierarchy connected.
	- some error resistant on invoke
	- better gui for method selection
	- this as out
	- ignore static
	- connectar subclasses. Dog->Animal (isAssignable?)
	- box unbox support
	- invokeInterface/InvokeSpecial
	- parameter order and names (p1,p2,p2 or names)
	- ignore generics
	- check method visibility
	- helper to select method signature
	- look available methods
	- go to superclass / superinterface
	- abstract classes 
	- filter bridges, synthetics etc?
	- downcast automàtic
	* suport per a boxes especialitzades (operacions matematiques) -> expressions
		-Generic +-*/ and others. Box templates. (Box.class with Object inputs or special marker interface type. Box$int.class specialized)
	-expressions
	-testing harness
	-peta el paquet default
	-comprovar si hi ha metode apply
	-Palette as tree with eclipse filters
	-Wrap text on automatic icons
	-mida lletra icona en altres pcs
	-Ensure icon disposal
	- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory current classloading scheme doesn't allow to load the JDT compiler from <classpath>. It must be on ant -lib classpath.
	-proguard ant
	-automate build proguard ant
	-standalone compiler
	-Cache palette/ background search
	-Javadoc on palette 
	-Background of an empty file not plain white ("start here" text?)
	-bad tooltip colors with dark theme